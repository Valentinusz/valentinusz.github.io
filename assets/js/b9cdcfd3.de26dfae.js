"use strict";(self.webpackChunkvalentinusz_github_io=self.webpackChunkvalentinusz_github_io||[]).push([[2866],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},k="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),k=p(a),c=r,u=k["".concat(s,".").concat(c)]||k[c]||d[c]||l;return a?n.createElement(u,i(i({ref:t},m),{},{components:a})):n.createElement(u,i({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[k]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4901:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={},i="Spark RDD",o={unversionedId:"bigdata/spark/rdd",id:"bigdata/spark/rdd",title:"Spark RDD",description:"Az RDD (Resilient Distributed Dataset - hibat\u0171r\u0151 elosztott adathalmaz) a Spark \xe1ltal haszn\xe1lt els\u0151dleges absztrakci\xf3.",source:"@site/notes/bigdata/spark/rdd.md",sourceDirName:"bigdata/spark",slug:"/bigdata/spark/rdd",permalink:"/notes/bigdata/spark/rdd",draft:!1,tags:[],version:"current",lastUpdatedBy:"Valentinusz",lastUpdatedAt:1697727265,formattedLastUpdatedAt:"2023. okt. 19.",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Spark - bevezet\xe9s",permalink:"/notes/bigdata/spark/"},next:{title:"Bevezet\xe9s",permalink:"/notes/databases2/"}},s={},p=[{value:"Transzform\xe1ci\xf3k",id:"transzform\xe1ci\xf3k",level:2},{value:"Lek\xe9pez\xe9s - <code>map</code>",id:"lek\xe9pez\xe9s---map",level:3},{value:"Sz\u0171r\xe9s  - <code>filter</code>",id:"sz\u0171r\xe9s----filter",level:3},{value:"Dimenzi\xf3cs\xf6kkent\u0151 lek\xe9pez\xe9s - <code>flapMap</code>",id:"dimenzi\xf3cs\xf6kkent\u0151-lek\xe9pez\xe9s---flapmap",level:3},{value:"Akci\xf3k",id:"akci\xf3k",level:2},{value:"Megsz\xe1ml\xe1l\xe1s - <code>count</code>",id:"megsz\xe1ml\xe1l\xe1s---count",level:3},{value:"Redukci\xf3 - <code>reduce</code>",id:"redukci\xf3---reduce",level:3}],m={toc:p},k="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(k,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"spark-rdd"},"Spark RDD"),(0,r.kt)("p",null,"Az RDD (Resilient Distributed Dataset - hibat\u0171r\u0151 elosztott adathalmaz) a Spark \xe1ltal haszn\xe1lt els\u0151dleges absztrakci\xf3.\nEgy olyan adathalmazt reprezent\xe1l, melynek r\xe9szei a klaszter k\xfcl\xf6nb\xf6z\u0151 g\xe9pein helyezkednek el. Ezt az adathalmazt,\nk\xfcl\xf6nb\xf6z\u0151 m\u0171veleteken kereszt\xfcl v\xe1ltoztatni tudjuk."),(0,r.kt)("p",null,"RDD-t t\xf6bb m\xf3don is l\xe9tre lehet hozni, p\xe9ld\xe1ul megl\xe9v\u0151 list\xe1b\xf3l. Itt a 3-as a part\xedci\xf3k sz\xe1m\xe1t adja meg, azaz h\xe1ny g\xe9pen\nker\xfclj\xf6n eloszt\xe1sra az adathalmaz."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"numbers = [1, 2, 4, 6, 7, 2, 4, 6, 5]\n\nrdd = sc.parallelize(numbers, 3)\n")),(0,r.kt)("p",null,"Az RDD-ken K\xe9t m\u0171velett\xedpust \xe9rtelmez\xfcnk: transzform\xe1ci\xf3kat \xe9s akci\xf3kat. A kett\u0151 k\xf6zti k\xfcl\xf6nbs\xe9g, hogy a transzform\xe1ci\xf3k\n\xfaj RDD-kel, m\xedg az akci\xf3k valami m\xe1s jelleg\u0171 \xe9rt\xe9kkel t\xe9rnek vissza."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"A m\u0171veletek jellege nagyon hasonl\xedt a ",(0,r.kt)("a",{parentName:"p",href:"/notes/java/stream"},"Java folyamaihoz")," illetve a JavaScript t\xf6mbf\xfcggv\xe9nyeihez.")),(0,r.kt)("h2",{id:"transzform\xe1ci\xf3k"},"Transzform\xe1ci\xf3k"),(0,r.kt)("p",null,"Ebben a bekezd\xe9sben a legfontosabb RDD transzform\xe1ci\xf3kat szeretn\xe9m bemutatni. A transzform\xe1ci\xf3k teljes list\xe1ja\nmegtal\xe1lhat\xf3 a ",(0,r.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/rdd-programming-guide.html#transformations"},"spark dokument\xe1ci\xf3ban"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Minden k\xf3dr\xe9szlet eset\xe9n adottnak tekintj\xfck a "),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from pyspark import SparkConf, SparkContext \n\nconf = SparkConf() \nsc = SparkContext(conf=conf)\n")),(0,r.kt)("p",{parentName:"admonition"},"sorokat.")),(0,r.kt)("h3",{id:"lek\xe9pez\xe9s---map"},"Lek\xe9pez\xe9s - ",(0,r.kt)("inlineCode",{parentName:"h3"},"map")),(0,r.kt)("p",null,"Egy \xfaj RDD-t ad vissza, melynek elemei az eredeti RDD elemei valamilyen logikai ment\xe9n \xe1talak\xedtva."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"numbers = sc.parallelize(range(1000))\nnumbers.map(lambda number: number ** 2)\n")),(0,r.kt)("h3",{id:"sz\u0171r\xe9s----filter"},"Sz\u0171r\xe9s  - ",(0,r.kt)("inlineCode",{parentName:"h3"},"filter")),(0,r.kt)("p",null,"Egy predik\xe1tumf\xfcggv\xe9nyt v\xe1r. Egy olyan rdd-t ad vissza, melyben az "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"numbers = sc.parallelize(range(1000))\nnumbers.filter(lambda number: number % 2 == 0)\n")),(0,r.kt)("h3",{id:"dimenzi\xf3cs\xf6kkent\u0151-lek\xe9pez\xe9s---flapmap"},"Dimenzi\xf3cs\xf6kkent\u0151 lek\xe9pez\xe9s - ",(0,r.kt)("inlineCode",{parentName:"h3"},"flapMap")),(0,r.kt)("p",null,"Egy szekvencia t\xedpus\xfa \xe9rt\xe9ket (",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"byte"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"list"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tuple"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"bytearray"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"buffer"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"range"),") visszaad\xf3 f\xfcggv\xe9nyt\nv\xe1r. Egy olyan RRD-vel t\xe9r vissza, mely a f\xfcggv\xe9ny \xe1ltal visszaadott szekvenci\xe1k elemeit tartalmazza. Teh\xe1t a visszaadott\nszekvenci\xe1kat egyetlen szekvenci\xe1v\xe1 lap\xedtja."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'text = sc.textFile(\'text.txt\') # rdd-be a f\xe1jl sorai lesznek\ntext.map(lambda line: line.split(" ")) # rdd minden eleme egy lista melyben szavak vannak\ntext.flatMap(lambda line: line.split(" ")) # rdd minden eleme egy sz\xf3\n')),(0,r.kt)("h2",{id:"akci\xf3k"},"Akci\xf3k"),(0,r.kt)("h3",{id:"megsz\xe1ml\xe1l\xe1s---count"},"Megsz\xe1ml\xe1l\xe1s - ",(0,r.kt)("inlineCode",{parentName:"h3"},"count")),(0,r.kt)("p",null,"Megadja az adott RDD-ben l\xe9v\u0151 elemeik sz\xe1m\xe1t."),(0,r.kt)("h3",{id:"redukci\xf3---reduce"},"Redukci\xf3 - ",(0,r.kt)("inlineCode",{parentName:"h3"},"reduce")),(0,r.kt)("p",null,"A redukci\xf3 egy k\xe9tparam\xe9teres (",(0,r.kt)("inlineCode",{parentName:"p"},"accumulator"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"current"),") f\xfcggv\xe9ny v\xe1r, aminek alkalmaz\xe1s\xe1val feldolgozza a teljes RDD-t. Ehhez minden elem eset\xe9n\nmegh\xedvja a megadott f\xfcggv\xe9nyt, melynek ",(0,r.kt)("inlineCode",{parentName:"p"},"accumulator")," param\xe9terek\xe9nt \xe1tadja a f\xfcggv\xe9ny el\u0151z\u0151 h\xedv\xe1s\xe1nak eredm\xe9ny\xe9t\n(kezdetben az \xe9rt\xe9k az RDD els\u0151 eleme) ",(0,r.kt)("inlineCode",{parentName:"p"},"current")," param\xe9terk\xe9nt pedig az aktu\xe1lis elemet."),(0,r.kt)("p",null,"Hasonl\xf3k\xe9rt l\xe1sd: ",(0,r.kt)("a",{parentName:"p",href:"http://zvon.org/other/haskell/Outputprelude/foldl_f.html"},"foldl (Haskell)"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce"},"reduce (JavaScript)"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#reduce-T-java.util.function.BinaryOperator-"},"Stream.reduce (Java)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"numbers = sc.parallelize(range(1000))\nnumbers.reduce(lambda accumulator, current: accumulator + current) # \xf6sszegz\xe9s megval\xf3s\xedt\xe1sa\nnumbers.reduce(lambda maximum, current: max(accumulator, current)) # maximumkiv\xe1laszt\xe1s\n")),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Nagyon fontos, hogy az elosztott v\xe9grehajt\xe1s miatt kommutat\xedvnak \xe9s asszociat\xedvnak kell lennie, illetve \xfagy kell meg\xedrni\n, hogy k\xe9s\u0151bb amikor a k\xfcl\xf6nb\xf6z\u0151 Node-okon befejez\u0151dik a redukci\xf3, az alredukci\xf3k eredm\xe9nye is ugyan ezzel a f\xfcggv\xe9nnyel\nlesz reduk\xe1lva."),(0,r.kt)("p",{parentName:"admonition"},"Ez\xe9rt p\xe9ld\xe1ul a k\xf6vetkez\u0151 k\xf3d rosszul m\u0171k\xf6dik:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-py"},"numbers.reduce(lambda count, current: count + 1 if current % 2 == 0 else count)\n"))))}d.isMDXComponent=!0}}]);